name: Lint Check

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci
      
    - name: Run ESLint
      working-directory: ./frontend
      run: npx eslint . --ext .ts,.tsx --max-warnings 0
      
    - name: Run TypeScript check
      working-directory: ./frontend
      run: npx tsc --noEmit
      
    - name: Run Prettier check
      working-directory: ./frontend
      run: npx prettier --check .
      
    - name: Comment PR with results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const { execSync } = require('child_process');
          
          try {
            // Run ESLint and capture output
            const lintOutput = execSync('npx eslint . --ext .ts,.tsx --format=compact', { 
              cwd: './frontend',
              encoding: 'utf8',
              stdio: ['pipe', 'pipe', 'pipe']
            });
            
            if (lintOutput.trim()) {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `## üîç Lint Check Results\n\n### ‚ùå Issues Found:\n\`\`\`\n${lintOutput}\n\`\`\`\n\nPlease fix these issues before merging.`
              });
            } else {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `## ‚úÖ Lint Check Passed\n\nNo linting issues found! üéâ`
              });
            }
          } catch (error) {
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## ‚ùå Lint Check Failed\n\n\`\`\`\n${error.stdout}\n\`\`\`\n\nPlease fix these issues before merging.`
            });
          } 