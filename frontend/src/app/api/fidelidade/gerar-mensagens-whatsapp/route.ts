import { NextRequest, NextResponse } from 'next/server'
import { createClient } from '@supabase/supabase-js'

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!
const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY!
const supabase = createClient(supabaseUrl, supabaseServiceKey)

// GET - Gerar mensagens de WhatsApp para c√≥digos dispon√≠veis
export async function GET(request: NextRequest) {
  try {
    const { searchParams } = new URL(request.url)
    const formato = searchParams.get('formato') || 'simples' // simples, completo, csv
    const limite = parseInt(searchParams.get('limite') || '10')

    // Buscar c√≥digos dispon√≠veis
    const { data: codigos, error } = await supabase
      .from('fidelidade_codigos_convite')
      .select('codigo, data_expiracao')
      .eq('usado', false)
      .eq('ativo', true)
      .order('codigo')
      .limit(limite)

    if (error) {
      return NextResponse.json(
        { error: 'Erro ao buscar c√≥digos' },
        { status: 500 }
      )
    }

    if (!codigos || codigos.length === 0) {
      return NextResponse.json(
        { error: 'Nenhum c√≥digo dispon√≠vel' },
        { status: 404 }
      )
    }

    const dataExpiracao = new Date(codigos[0].data_expiracao)
    const dataExpiracaoFormatada = dataExpiracao.toLocaleDateString('pt-BR')

    // Templates de mensagem
    const templates = {
      simples: (codigo: string) => `üî• CONVITE EXCLUSIVO - ORDIN√ÅRIO BAR

Voc√™ foi selecionado(a) para fazer parte do nosso programa VIP!

üéØ APENAS 100 VAGAS DISPON√çVEIS
üí∞ Pague R$ 100, Ganhe R$ 150 em cr√©ditos
üëë Acesso VIP + Benef√≠cios exclusivos

Seu c√≥digo exclusivo: ${codigo}

üöÄ Acesse: zykor.com.br/fidelidade
‚è∞ V√°lido at√©: ${dataExpiracaoFormatada}

N√£o perca sua vaga!`,

      completo: (codigo: string) => `üçª CONVITE EXCLUSIVO VIP - ORDIN√ÅRIO BAR üçª

Ol√°! Voc√™ foi ESPECIALMENTE SELECIONADO(A) para fazer parte do c√≠rculo exclusivo de apenas 100 pessoas no programa VIP do Ordin√°rio Bar! üî•

üéØ SUA VANTAGEM EXCLUSIVA:
üí∞ Pague apenas R$ 100
üíé Receba R$ 150 em cr√©ditos
üìà 50% de retorno GARANTIDO todo m√™s
üëë Status VIP com benef√≠cios exclusivos

üîê SEU C√ìDIGO PESSOAL: ${codigo}

üöÄ COMO ATIVAR:
1Ô∏è‚É£ Acesse: zykor.com.br/fidelidade
2Ô∏è‚É£ Digite seu c√≥digo exclusivo
3Ô∏è‚É£ Complete o cadastro
4Ô∏è‚É£ Realize o pagamento
5Ô∏è‚É£ Receba seus cr√©ditos instantaneamente!

‚ö° BENEF√çCIOS VIP:
‚Ä¢ R$ 150 em cr√©ditos mensais
‚Ä¢ Desconto em bebidas premium
‚Ä¢ Acesso priorit√°rio em eventos
‚Ä¢ Cart√£o digital personalizado
‚Ä¢ Atendimento VIP exclusivo

‚è∞ URGENTE: V√°lido apenas at√© ${dataExpiracaoFormatada}
üéØ Apenas 100 vagas dispon√≠veis

N√£o perca essa oportunidade √∫nica! 
Seja VIP do Ordin√°rio Bar! üç∫üëë`,

      csv: (codigo: string) => `${codigo},${dataExpiracaoFormatada},"Convite VIP Ordin√°rio Bar"`
    }

    // Gerar mensagens
    const mensagens = codigos.map(item => ({
      codigo: item.codigo,
      mensagem: templates[formato as keyof typeof templates](item.codigo),
      data_expiracao: item.data_expiracao
    }))

    // Estat√≠sticas
    const stats = {
      total_disponiveis: codigos.length,
      formato_usado: formato,
      data_expiracao: dataExpiracaoFormatada,
      gerado_em: new Date().toISOString()
    }

    if (formato === 'csv') {
      // Retornar como CSV
      const csvHeader = 'Codigo,DataExpiracao,Titulo'
      const csvContent = [csvHeader, ...mensagens.map(m => m.mensagem)].join('\n')
      
      return new Response(csvContent, {
        headers: {
          'Content-Type': 'text/csv',
          'Content-Disposition': `attachment; filename="codigos-whatsapp-${new Date().toISOString().split('T')[0]}.csv"`
        }
      })
    }

    return NextResponse.json({
      success: true,
      estatisticas: stats,
      mensagens: mensagens
    })

  } catch (error) {
    console.error('Erro ao gerar mensagens:', error)
    return NextResponse.json(
      { error: 'Erro interno do servidor' },
      { status: 500 }
    )
  }
}

// POST - Marcar c√≥digos espec√≠ficos como "enviados" (adicionar observa√ß√£o)
export async function POST(request: NextRequest) {
  try {
    const { codigos_enviados, observacao = 'Enviado via WhatsApp' } = await request.json()

    if (!codigos_enviados || !Array.isArray(codigos_enviados) || codigos_enviados.length === 0) {
      return NextResponse.json(
        { error: 'Lista de c√≥digos √© obrigat√≥ria' },
        { status: 400 }
      )
    }

    // Atualizar observa√ß√£o dos c√≥digos
    const { data, error } = await supabase
      .from('fidelidade_codigos_convite')
      .update({
        observacoes: observacao,
        updated_at: new Date().toISOString()
      })
      .in('codigo', codigos_enviados)
      .eq('usado', false)
      .eq('ativo', true)
      .select('codigo')

    if (error) {
      return NextResponse.json(
        { error: 'Erro ao atualizar c√≥digos' },
        { status: 500 }
      )
    }

    return NextResponse.json({
      success: true,
      codigos_atualizados: data?.length || 0,
      codigos: data?.map(c => c.codigo) || [],
      observacao_adicionada: observacao
    })

  } catch (error) {
    console.error('Erro ao marcar c√≥digos como enviados:', error)
    return NextResponse.json(
      { error: 'Erro interno do servidor' },
      { status: 500 }
    )
  }
}
