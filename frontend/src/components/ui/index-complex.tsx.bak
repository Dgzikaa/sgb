'use client';

// =====================================================
// 📦 DESIGN SYSTEM ZYKOR - EXPORTAÇÕES BÁSICAS
// =====================================================

// Re-export componentes base existentes
export { Button } from './button';
export { Input } from './input';
export { Card, CardContent, CardDescription, CardHeader, CardTitle } from './card';
export { Badge } from './badge';
export { Switch } from './switch';
export { Slider } from './slider';

// 🚨 Error Boundaries (apenas o que funciona)
export { default as ErrorBoundary } from './error-boundary';

// 🎬 Page Transitions
export { PageTransition, TransitionWrapper, LoadingTransition } from './page-transitions';

// 🎭 Empty States
export { EmptyState, ResponsiveEmptyState } from './empty-states';

// 🍞 Breadcrumbs
export {
  Breadcrumbs,
  ResponsiveBreadcrumbs,
  SmartBreadcrumbs,
  useBreadcrumbHistory,
  useBreadcrumbs,
} from './breadcrumbs';

// 🌙 Theme Switcher
export { ThemeSwitcher, useTheme } from './theme-switcher-modern';

// ⌨️ Keyboard Shortcuts
export { KeyboardShortcuts, useKeyboardShortcuts } from './keyboard-shortcuts-modern';

// 🔔 Notifications
export { ModernNotifications } from './notifications-modern';

// ⌘ Command Palette
export { CommandPalette } from './command-palette';

// 📜 Scroll Animations & Parallax
export {
  ScrollTrigger,
  Parallax,
  StaggeredContainer,
  ScrollProgress,
  TextReveal,
  ImageReveal,
  ScrollToTop,
  useScrollAnimation,
  useParallaxScroll,
  useResponsiveScrollAnimation,
} from './scroll-animations';

// 📱 Mobile Gestures
export {
  GestureHandler,
  Swipeable,
  Pinchable,
  TapHandler,
  GestureFeedback,
  useSwipeGesture,
  usePinchGesture,
  useTouchGesture,
  useResponsiveGestures,
  calculateSwipeDirection,
  calculatePinchScale,
  calculateRotation,
} from './mobile-gestures';

// 🔍 Global Search
export {
  GlobalSearch,
  ResponsiveGlobalSearch,
  useGlobalSearch,
  useSearchHistory,
} from './global-search';

// ♿ Accessibility
export {
  AccessibilityProvider,
  ResponsiveAccessibilityProvider,
  SkipLink,
  FocusTrap,
  LiveRegion,
  ScreenReaderOnly,
  useAccessibility,
  useFocusManagement,
  useKeyboardNavigation,
  useHighContrast,
} from './accessibility';

// 📊 Analytics & UX
export {
  UserEventTracker,
  HeatmapVisualizer,
  PerformanceMonitor,
  UserInsightsGenerator,
  AnalyticsUX,
  useAnalytics,
  usePerformanceMetrics,
} from './analytics-ux';

// =====================================================
// 🛠️ HOOKS E UTILITÁRIOS
// =====================================================

// Utility functions
export const debounce = (func: Function, wait: number) => {
  let timeout: NodeJS.Timeout;
  return function executedFunction(...args: any[]) {
    const later = () => {
      clearTimeout(timeout);
      func(...args);
    };
    clearTimeout(timeout);
    timeout = setTimeout(later, wait);
  };
};

export const throttle = (func: Function, limit: number) => {
  let inThrottle: boolean;
  return function executedFunction(...args: any[]) {
    if (!inThrottle) {
      func.apply(this, args);
      inThrottle = true;
      setTimeout(() => inThrottle = false, limit);
    }
  };
};

export const clamp = (value: number, min: number, max: number) =>
  Math.min(Math.max(value, min), max);

export const lerp = (start: number, end: number, factor: number) =>
  start + (end - start) * factor;

// Design System Configuration
export const DESIGN_SYSTEM_CONFIG = {
  animations: {
    duration: {
      fast: '150ms',
      normal: '300ms',
      slow: '500ms',
    },
    easing: {
      ease: 'cubic-bezier(0.4, 0, 0.2, 1)',
      easeIn: 'cubic-bezier(0.4, 0, 1, 1)',
      easeOut: 'cubic-bezier(0, 0, 0.2, 1)',
    },
  },
  breakpoints: {
    sm: '640px',
    md: '768px',
    lg: '1024px',
    xl: '1280px',
    '2xl': '1536px',
  },
  spacing: {
    xs: '0.25rem',
    sm: '0.5rem',
    md: '1rem',
    lg: '1.5rem',
    xl: '2rem',
    '2xl': '3rem',
  },
};